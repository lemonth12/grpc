// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: request.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Statis_FindPrimeNum_FullMethodName = "/Statis/FindPrimeNum"
)

// StatisClient is the client API for Statis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StatisClient interface {
	FindPrimeNum(ctx context.Context, in *ArrRequest, opts ...grpc.CallOption) (*ArrResponse, error)
}

type statisClient struct {
	cc grpc.ClientConnInterface
}

func NewStatisClient(cc grpc.ClientConnInterface) StatisClient {
	return &statisClient{cc}
}

func (c *statisClient) FindPrimeNum(ctx context.Context, in *ArrRequest, opts ...grpc.CallOption) (*ArrResponse, error) {
	out := new(ArrResponse)
	err := c.cc.Invoke(ctx, Statis_FindPrimeNum_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatisServer is the server API for Statis service.
// All implementations must embed UnimplementedStatisServer
// for forward compatibility
type StatisServer interface {
	FindPrimeNum(context.Context, *ArrRequest) (*ArrResponse, error)
	mustEmbedUnimplementedStatisServer()
}

// UnimplementedStatisServer must be embedded to have forward compatible implementations.
type UnimplementedStatisServer struct {
}

func (UnimplementedStatisServer) FindPrimeNum(context.Context, *ArrRequest) (*ArrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPrimeNum not implemented")
}
func (UnimplementedStatisServer) mustEmbedUnimplementedStatisServer() {}

// UnsafeStatisServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StatisServer will
// result in compilation errors.
type UnsafeStatisServer interface {
	mustEmbedUnimplementedStatisServer()
}

func RegisterStatisServer(s grpc.ServiceRegistrar, srv StatisServer) {
	s.RegisterService(&Statis_ServiceDesc, srv)
}

func _Statis_FindPrimeNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisServer).FindPrimeNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Statis_FindPrimeNum_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisServer).FindPrimeNum(ctx, req.(*ArrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Statis_ServiceDesc is the grpc.ServiceDesc for Statis service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Statis_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Statis",
	HandlerType: (*StatisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindPrimeNum",
			Handler:    _Statis_FindPrimeNum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "request.proto",
}
